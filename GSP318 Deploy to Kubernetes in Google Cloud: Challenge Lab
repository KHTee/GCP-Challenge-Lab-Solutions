#!/bin/bash
export REGION=us-central1
export DOCKER_IMG_AND_TAG="valkyrie-prod:v0.0.1"
export REPOSITORY="valkyrie-docker-repo"
export PROJECT_ID="qwiklabs-gcp-03-e6aaacc6db80"

### Task 1. Create a Docker image and store the Dockerfile
gcloud auth list
gsutil cat gs://cloud-training/gsp318/marking/setup_marking_v2.sh | bash
gcloud source repos clone valkyrie-app
cd ~/valkyrie-app
cat > Dockerfile <<EOF
FROM golang:1.10
WORKDIR /go/src/app
COPY source .
RUN go install -v
ENTRYPOINT ["app","-single=true","-port=8080"]
EOF
docker build -t $DOCKER_IMG_AND_TAG .
bash ~/marking/step1_v2.sh

### Task 2. Test the created Docker image
cd ~/valkyrie-app
docker run -p 8080:8080 $DOCKER_IMG_AND_TAG &
bash ~/marking/step2_v2.sh

### Task 3. Push the Docker image to the Artifact Registry
cd ~/valkyrie-app

gcloud artifacts repositories create $REPOSITORY \
    --repository-format=docker \
    --location=$REGION \
    --description="subcribe to quiklab" \
    --async 

yes | gcloud auth configure-docker $REGION-docker.pkg.dev

docker tag $DOCKER_IMG_AND_TAG $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$DOCKER_IMG_AND_TAG

docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$DOCKER_IMG_AND_TAG


### Task 4. Create and expose a deployment in Kubernetes

sed -i s#IMAGE_HERE#$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$DOCKER_IMG_AND_TAG#g ~/valkyrie-app/k8s/deployment.yaml

gcloud container clusters get-credentials valkyrie-dev --zone us-east1-d
kubectl create -f ~/valkyrie-app/k8s/deployment.yaml
kubectl create -f ~/valkyrie-app/k8s/service.yaml
